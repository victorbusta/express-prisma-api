// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  role String @db.VarChar(255)
  User User[]
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  name              String
  adresse           String
  password          String
  createdAt         DateTime            @default(now())
  deletedDate       DateTime?
  role              Role                @relation(fields: [roleId], references: [id])
  roleId            Int
  Machine           Machine[]
  Component         Component[]
  Machine_Component Machine_Component[]
  Comment           Comment[]
  Document          Document[]
  Article           Article[]
}

model ArticleType {
  id      Int       @id @default(autoincrement())
  type    String
  Article Article[]
}

model Article {
  id            Int         @id @default(autoincrement())
  name          String
  description   String
  articleType   ArticleType @relation(fields: [articleTypeId], references: [id])
  articleTypeId Int
  machine       Machine?    @relation(fields: [machineId], references: [id])
  machineId     Int?
  component     Component?  @relation(fields: [componentId], references: [id])
  componentId   Int?
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  Comment       Comment[]
  Document      Document[]
}

model Document {
  id          Int       @id @default(autoincrement())
  name        String
  format      String
  url         String
  machine     Machine   @relation(fields: [machineId], references: [id])
  machineId   Int
  component   Component @relation(fields: [componentId], references: [id])
  componentId Int
  article     Article   @relation(fields: [articleId], references: [id])
  articleId   Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  createdAt   DateTime  @default(now())
  deletedDate DateTime?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  article     Article   @relation(fields: [articleId], references: [id])
  articleId   Int
}

model Machine {
  id                  Int                 @id @default(autoincrement())
  name                String
  description         String
  price               String
  addedAt             DateTime            @default(now())
  creationDate        DateTime?
  discontinuationDate DateTime?
  user                User                @relation(fields: [userId], references: [id])
  userId              Int
  Machine_Component   Machine_Component[]
  Article             Article[]
  Document            Document[]
}

model Component {
  id                  Int                 @id @default(autoincrement())
  name                String
  description         String
  price               String
  addedAt             DateTime            @default(now())
  creationDate        DateTime?
  discontinuationDate DateTime?
  user                User                @relation(fields: [userId], references: [id])
  userId              Int
  Machine_Component   Machine_Component[]
  Article             Article[]
  Document            Document[]
}

model Machine_Component {
  machine     Machine   @relation(fields: [machineId], references: [id])
  machineId   Int
  component   Component @relation(fields: [componentId], references: [id])
  componentId Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  assigneddAt DateTime  @default(now())

  @@id([machineId, componentId, userId])
}
